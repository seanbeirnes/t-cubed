/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GameNewgameRouteImport } from './routes/game/newgame'
import { Route as GameUuidNnRouteImport } from './routes/game/$uuid/nn'
import { Route as GameUuidMinimaxRouteImport } from './routes/game/$uuid/minimax'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GameNewgameRoute = GameNewgameRouteImport.update({
  id: '/game/newgame',
  path: '/game/newgame',
  getParentRoute: () => rootRouteImport,
} as any)
const GameUuidNnRoute = GameUuidNnRouteImport.update({
  id: '/game/$uuid/nn',
  path: '/game/$uuid/nn',
  getParentRoute: () => rootRouteImport,
} as any)
const GameUuidMinimaxRoute = GameUuidMinimaxRouteImport.update({
  id: '/game/$uuid/minimax',
  path: '/game/$uuid/minimax',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/game/newgame': typeof GameNewgameRoute
  '/game/$uuid/minimax': typeof GameUuidMinimaxRoute
  '/game/$uuid/nn': typeof GameUuidNnRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/game/newgame': typeof GameNewgameRoute
  '/game/$uuid/minimax': typeof GameUuidMinimaxRoute
  '/game/$uuid/nn': typeof GameUuidNnRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/game/newgame': typeof GameNewgameRoute
  '/game/$uuid/minimax': typeof GameUuidMinimaxRoute
  '/game/$uuid/nn': typeof GameUuidNnRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/game/newgame' | '/game/$uuid/minimax' | '/game/$uuid/nn'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/game/newgame' | '/game/$uuid/minimax' | '/game/$uuid/nn'
  id:
    | '__root__'
    | '/'
    | '/game/newgame'
    | '/game/$uuid/minimax'
    | '/game/$uuid/nn'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GameNewgameRoute: typeof GameNewgameRoute
  GameUuidMinimaxRoute: typeof GameUuidMinimaxRoute
  GameUuidNnRoute: typeof GameUuidNnRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/newgame': {
      id: '/game/newgame'
      path: '/game/newgame'
      fullPath: '/game/newgame'
      preLoaderRoute: typeof GameNewgameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/$uuid/nn': {
      id: '/game/$uuid/nn'
      path: '/game/$uuid/nn'
      fullPath: '/game/$uuid/nn'
      preLoaderRoute: typeof GameUuidNnRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/$uuid/minimax': {
      id: '/game/$uuid/minimax'
      path: '/game/$uuid/minimax'
      fullPath: '/game/$uuid/minimax'
      preLoaderRoute: typeof GameUuidMinimaxRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GameNewgameRoute: GameNewgameRoute,
  GameUuidMinimaxRoute: GameUuidMinimaxRoute,
  GameUuidNnRoute: GameUuidNnRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
